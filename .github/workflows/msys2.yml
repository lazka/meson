name: msys2

on:
  push:
  pull_request:
 
jobs:
  test:
    runs-on: windows-2019
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    name: ${{ matrix.NAME }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - NAME: gccx86ninja
            MSYSTEM: MINGW32
            MSYS2_ARCH: i686
            COMPILER: gcc
            TOOLCHAIN: toolchain
          - NAME: gccx64ninja
            MSYSTEM: MINGW64
            MSYS2_ARCH: x86_64
            COMPILER: gcc
            TOOLCHAIN: toolchain
            MESON_RSP_THRESHOLD: 0
          - NAME: clangx64ninja
            MSYSTEM: MINGW64
            MSYS2_ARCH: x86_64
            COMPILER: clang
            TOOLCHAIN: clang

    defaults:
      run:
        shell: msys2 {0}

    steps:
      - uses: actions/checkout@v2

      - uses: msys2/setup-msys2@v1
        with:
          msystem: ${{ matrix.MSYSTEM }}
          update: true
          path-type: minimal
          install: >-
            base-devel
            git
            mercurial
            mingw-w64-${{ matrix.MSYS2_ARCH }}-cmake
            mingw-w64-${{ matrix.MSYS2_ARCH }}-lcov
            mingw-w64-${{ matrix.MSYS2_ARCH }}-libxml2
            mingw-w64-${{ matrix.MSYS2_ARCH }}-ninja
            mingw-w64-${{ matrix.MSYS2_ARCH }}-pkg-config
            mingw-w64-${{ matrix.MSYS2_ARCH }}-python2
            mingw-w64-${{ matrix.MSYS2_ARCH }}-python3
            mingw-w64-${{ matrix.MSYS2_ARCH }}-python3-lxml
            mingw-w64-${{ matrix.MSYS2_ARCH }}-python3-setuptools
            mingw-w64-${{ matrix.MSYS2_ARCH }}-python3-pip
            mingw-w64-${{ matrix.MSYS2_ARCH }}-${{ matrix.TOOLCHAIN }}

      - name: Install dependencies
        run: |
          python3 -m pip --disable-pip-version-check install gcovr jsonschema pefile

      - name: Run Tests
        env:
          CI: 1
        run: |
          export BOOST_ROOT=
          export PATHEXT="$PATHEXT;.py"

          if [[ '${{ matrix.COMPILER }}' == 'clang' ]]; then
            export CC=clang
            export CXX=clang++
            export OBJC=clang
            export OBJCXX=clang++
          fi

          if [[ "${{ matrix.MESON_RSP_THRESHOLD }}" != "" ]]; then
            export MESON_RSP_THRESHOLD=${{ matrix.MESON_RSP_THRESHOLD }}
          fi

          MSYSTEM= python3 run_tests.py --backend=ninja

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.NAME }}
          path: meson-test-run.*